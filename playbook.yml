---
- name: Create User Accounts and Provision Servers
  hosts: all 
  become: yes 

# Task 1  
  tasks:
    - name: Create Managers, Admins and Devs groups
      group:
        name: "{{ item }}"
        state: present
        loop:
          - managers 
          - admins 
          - devs 
 
    - name: Create Manager Users  
      user:  
        name: "{{ item }}"   
        state: present
        group: managers
        groups "{{ 'wheel' if ansible_os_family == 'RedHat' else 'sudo' }}"
        append: yes 
      loops:
        - manager 1
        - manager 2

    - name: Create Admins Users with sudo access
      user:
        name: admin
        state: present
        group: admins
        groups: "{{ 'wheel' if ansible_os_family == 'RedHat' else 'sudo' }}"
        append: yes 

    - name: Create Devs Users with no sudo access
      user:
        name: user
        group: devs

# Task 2
    - name: Install Software for Developers
      package:
        name: "{{ item }}"
        state: present
      loop:
        - vim
        - nano
        - git
        - curl
        - tree
        - vim
        - tmux
        - unzip

# Task 3
    - name: Set MOTD 
      shell: echo 'Welcome to the DevOps workstation.' > /etc/motd
      args:
        creates: /etc/motd

# Task 4
    - name: Set Hostname to "devops_1" for Ubuntu
      hostname:
        name: devops1
      when: ansible_facts['os_family'] == "Debian"

    - name: Set Hostname to "devops_2" for CentOS
      hostname:
        name: devops2
      when: ansible_facts['os_family'] == "RedHat"

# Task 5
    - name: Set timezone to UTC
      timezone:
        name: UTC

# Task 6
    - name: Install MariaDB on Ubuntu
      apt:
        name: mariadb-server
        state: present
        update_cache: yes 
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install MariaDB on CentOS
      yum:
        name: mariadb-server
        state: present
        update_cache: yes 
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Try to create database as root/nopassword first. If not allowed, pass the credentials
      mysql_db:
        check_implicit_admin: true 
        login_user: bob
        login_password: 123456
        name: bobdata
        state: present
      when: ansible_facts['os_family'] == 'Debian'
